name: Run commands on different operating systems
on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs: 
  release:
    name: Release Pushed Tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.ref }}
        run: |
          tag=${ref##*/}
          gh release create "$tag" -p --repo="$GITHUB_REPOSITORY" --latest --title="${GITHUB_REPOSITORY#*/} ${tag#v}" --generate-notes

  build-linux:
    name: Build latest push on ubuntu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '19'
      - name: Install dependencies
        run: |
          npm i
      - name: Install build files
        run: sudo apt update && sudo apt install elfutils && sudo apt install rpm
      - name: Build and Publish
        run: npm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  build-macos:
    runs-on: macOS-latest
    name: Build latest push on macos
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '19'
      - name: Install dependencies
        run: npm i
      - name: Build and publish
        run: npm run publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  build-windows:
     name: Build latest push on Windows
     runs-on: windows-latest
     steps:
       - uses: actions/checkout@v3
       - uses: actions/setup-node@v3
         with:
           node-version": '19'
       - name: Install dependencies
         shell: bash
         run: npm i
       - name: Build and publish
         run: npm run publish
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
           
  build-aur:
     name: Build AUR package
     runs-on: ubuntu-latest
     steps:
       - name: Publish to the AUR
         uses: KSXGitHub/github-actions-deploy-aur@v2.7.0
         with:
          pkgname: flashplayer
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Update AUR package
          ssh_keyscan_types: rsa
        
            
